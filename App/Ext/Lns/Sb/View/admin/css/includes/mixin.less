.radius-all (@radius: 5px) {
	border-radius: @radius;
	-webkit-border-radius: @radius;
	-moz-border-radius: @radius;
}
.radius-top-left (@radius: 5px) {
	border-top-left-radius: @radius;
	-webkit-border-top-left-radius: @radius;
	-moz-border-top-left-radius: @radius;
}
.radius-top-right (@radius: 5px) {
	border-top-right-radius: @radius;
	-webkit-border-top-right-radius: @radius;
	-moz-border-top-right-radius: @radius;
}
.radius-bottom-left (@radius: 5px) {
	border-bottom-left-radius: @radius;
	-webkit-border-bottom-left-radius: @radius;
	-moz-border-bottom-left-radius: @radius;
}
.radius-bottom-right (@radius: 5px) {
	border-bottom-right-radius: @radius;
	-webkit-border-bottom-right-radius: @radius;
	-moz-border-bottom-right-radius: @radius;
}
.translate3d(@tx: 0px, @ty: 0px, @tz: 0px, @duration: 500ms){
	transition: all @duration ease 0s;
	-webkit-transform: translate3d(@tx, @ty, @tz,);
	-moz-transform: translate3d(@tx, @ty, @tz,);
	-ms-transform: translate3d(@tx, @ty, @tz,);	
}
.loop (@start: 1; @max: 5; @interval: 1; @prefix: ~""; @suffix: ~""; @property: ~""; @unit: 'px'; @imp: ~"!important") 
when ((@start * @interval) <= @max) {
    
	@int : @start * @interval;
	@{prefix}@{int}@{suffix} {
        @{property} : ~"@{int}@{unit} @{imp}";
    }
	.loop ((@start + 1), @max, @interval, @prefix, @suffix, @property, @unit, @imp);
}